name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - 'main'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-test:
    name: Build and Run Tests
    strategy:
      matrix:
        java-version: [ 17 ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}
          cache: sbt
      - name: Build and Test
        run: sbt -v +test +headerCheckAll +fmtCheck
      - name: Unit Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Unit Test Results
          path: ./target/test-reports/TEST-*.xml
          reporter: java-junit

  publish-docker-image:
    if: github.ref == 'refs/heads/main'
    needs: build-and-test
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.output_docker_image_tag.outputs.tag }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push image
        run: sbt Docker/publish
      - name: Output docker image tag
        id: output_docker_image_tag
        run: echo "tag=$(git describe --tag --dirty --abbrev=7 --always)" >> "$GITHUB_OUTPUT"
        shell: bash # Explicit for fail-fast behaviour

  trigger-dev-deployment:
    name: Trigger deployment to DEV
    runs-on: ubuntu-latest
    needs: publish-docker-image
    steps:
      - name: Trigger deployment to DEV
        env:
          IMAGE_TAG: ${{ needs.publish-docker-image.tag }}
          JENKINS_BASIC_AUTH_USER: ${{ secrets.JENKINS_BASIC_AUTH_USER }}
          JENKINS_BASIC_AUTH_PASS: ${{ secrets.JENKINS_BASIC_AUTH_PASS }}
          JENKINS_DEV_WEBHOOK: ${{ secrets.JENKINS_DEV_WEBHOOK }}
        run: |
          curl -f -u "${JENKINS_BASIC_AUTH_USER}:${JENKINS_BASIC_AUTH_PASS}" \
               -X POST "${JENKINS_DEV_WEBHOOK}" \
               -d "Service=ingest&Version=${IMAGE_TAG}"
