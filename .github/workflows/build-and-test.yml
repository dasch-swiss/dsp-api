name: CI-build-and-test

on:
  pull_request:
    types: [ opened, reopened, synchronize ]
    branches-ignore:
      - "**/graphite-base/**"

env:
  JAVA_VERSION: 21

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Run preparatory steps
        uses: dasch-swiss/dsp-api/.github/actions/preparation@main
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Start recording coverage
        run: ./sbtx -v coverage
      - name: Run webapi tests
        run: ./sbtx -v webapi/test
      - name: Run ingest tests
        run: ./sbtx -v ingest/test
      - name: Aggregate coverage
        run: ./sbtx -v coverageAggregate
      - name: WebApi Unit Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: WebApi Unit Test Results
          path: ./webapi/target/test-reports/TEST-*.xml
          reporter: java-junit
      - name: Upload coverage data to codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./target/scala-3.3.6/coverage-report/cobertura.xml
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./target/scala-3.3.6/coverage-report/cobertura.xml

  test-it:
    name: Build and IT test
    runs-on: buildjet-4vcpu-ubuntu-2204
    concurrency:
      group: ${{ github.ref }}-it
      cancel-in-progress: true
    steps:
      - name: Run preparatory steps
        uses: dasch-swiss/dsp-api/.github/actions/preparation@main
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Run integration tests
        run: make test-it
      - name: WebApi IT Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: WebApi IT Test Results
          path: ./modules/test-it/target/test-reports/TEST-*.xml
          reporter: java-junit
      - name: Upload coverage data to codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./target/scala-3.3.6/coverage-report/cobertura.xml
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./target/scala-3.3.6/coverage-report/cobertura.xml

  test-e2e:
    name: Build and E2E test
    runs-on: buildjet-4vcpu-ubuntu-2204
    concurrency:
      group: ${{ github.ref }}-e2e
      cancel-in-progress: true
    steps:
      - name: Run preparatory steps
        uses: dasch-swiss/dsp-api/.github/actions/preparation@main
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Run end-to-end tests
        run: make test-e2e
      - name: WebApi E2E Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: WebApi E2E Test Results
          path: ./modules/test-e2e/target/test-reports/TEST-*.xml
          reporter: java-junit
      - name: Upload coverage data to codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./target/scala-3.3.6/coverage-report/cobertura.xml
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./target/scala-3.3.6/coverage-report/cobertura.xml

  test-ingest-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - name: Run integration tests
        run: export DOCKER_BUILDKIT=1; ./sbtx Docker/publishLocal; ./sbtx ingestIntegration/test

  test-docs-build:
    name: Test docs
    runs-on: ubuntu-latest
    steps:
      - name: Run preparatory steps
        uses: dasch-swiss/dsp-api/.github/actions/preparation@main
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Checkout source
        uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - name: Install requirements (pip, npm, apt)
        run: |
          just docs-install-requirements
          npm install --global typedoc
          sudo apt-get install graphviz
      - name: markdownlint
        run: just markdownlint
      - name: Build docs
        run: just docs-build

  check-formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Run preparatory steps
        uses: dasch-swiss/dsp-api/.github/actions/preparation@main
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Check formatting
        run: make check
